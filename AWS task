Task 1: â€¢	Create and deploy a running instance of a web server using a configuration management tool of your choice. The web server should serve one page with the following content. <html>
<head>
<title>Hello World</title>
</head>
<body>
<h1>Hello World!</h1>
</body>
</html>  


SOLUTION: 
step 1: Created an Ubuntu EC2 instance on AWS via portal.
step 2: Installed AWS cli
step 3: Configured AWS in the instance by providing access and secret keys
step 4: Installed Ansible and terraform
step 5: created 2 directories for ansible and terraform
step 6: In terraform directory, created a file called main.tf
step 7: wrote script to provision ubuntu EC2 instance, ssh keypair and security group.

terraform script: 

provider "aws" {
  region = "us-east-1"
}

# Generating an SSH key pair
resource "tls_private_key" "ssh_key" {
  algorithm = "RSA"
  rsa_bits  = 4096
}

# Saving the public key as an AWS key pair
resource "aws_key_pair" "deployed_key" {
  key_name   = "testkeypair"  # unique name of our key pair
  public_key = tls_private_key.ssh_key.public_key_openssh
}


# Create a security group to allow HTTP traffic
resource "aws_security_group" "allow_http" {
  name        = "allow_http"
  description = "Allow HTTP inbound traffic"

  ingress {
    from_port   = 80
    to_port     = 80
    protocol    = "tcp"
    cidr_blocks = ["0.0.0.0/0"]
  }

  egress {
    from_port   = 0
    to_port     = 0
    protocol    = "-1"
    cidr_blocks = ["0.0.0.0/0"]
  }
}

# Launch an EC2 instance
resource "aws_instance" "webserver" {
  ami           = "ami-0e86e20dae9224db8"  # (ubuntu)
  instance_type = "t2.micro"
  key_name      = aws_key_pair.deployed_key.key_name  # Name of the key pair
  security_groups = [aws_security_group.allow_http.name]

  user_data = <<-EOF
              #!/bin/bash
              # Install Nginx
              apt update -y
              apt install -y nginx
              systemctl start nginx
              # Add custom HTML content
              echo "<html><head><title>Hello World</title></head><body><h1>Hello World!</h1></body></html>" > /var/www/html/index.html
              EOF

  tags = {
    Name = "Terraform-Web-Server"
  }
}

# Output the private key (for local use)
output "private_key" {
  value     = tls_private_key.ssh_key.private_key_pem
  sensitive = true
}

# Output the instance's public IP
output "instance_public_ip" {
  value = aws_instance.webserver.public_ip
}


step 8: executed terraform init, plan and execute commands
step 9: Infrastructure with custom webpage waas provisioned on AWS.
